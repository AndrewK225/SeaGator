print(__doc__)

# Import the necessary modules and libraries
import numpy as np
from sklearn.tree import DecisionTreeRegressor
import matplotlib.pyplot as plt

# Create a random dataset
rng = np.random.RandomState(1)
X = np.sort(5 * rng.rand(80, 1), axis=0)
y = np.sin(X).ravel()
y[::5] += 3 * (0.5 - rng.rand(16))

# Fit regression model
leftRegressorX = DecisionTreeRegressor(max_depth=2)
#leftRegressorX. = DecisionTreeRegressor(max_depth=5)
leftEyeXs = [[-41.0, 10], [-45.0, 10], [-42.0, 10], [-45.5, 10], [-44.5, 10], [-42.5, 10], [-44.5, 10], [-44.5, 10], [-37.5, 10], [-43.5, 10], [-39.0, 10], [-43.0, 10], [-38.0, 10], [-37.0, 10], [-39.0, 10], [-37.0, 10], [-42.0, 10], [-42.0, 10], [-45.5, 10], [-41.0, 10], [-39.5, 10], [-38.5, 10], [-37.5, 10], [-42.0, 10], [-43.0, 10], [-43.0, 10], [-38.0, 10], [-41.0, 10], [-40.0, 10], [-42.0, 10], [-40.0, 10], [-44.0, 10], [-43.5, 10], [-39.0, 10], [-42.0, 10], [-40.0, 10], [-44.0, 10], [-43.0, 10], [-36.5, 10], [-42.0, 10], [-37.5, 10], [-41.0, 10], [-36.5, 10], [-41.0, 10], [-38.0, 10], [-43.0, 10], [-38.0, 640], [-37.5, 640], [-43.0, 640], [-41.5, 640], [-47.0, 640], [-48.0, 640], [-42.0, 640], [-48.5, 640], [-48.5, 640], [-49.5, 640], [-44.5, 640], [-51.0, 640], [-50.0, 640], [-48.0, 640], [-47.0, 640], [-49.0, 640], [-47.0, 640], [-48.5, 640], [-46.0, 640], [-46.0, 640], [-49.0, 640], [-50.0, 640], [-50.0, 640], [-48.0, 640], [-50.0, 640], [-51.0, 640], [-49.0, 640], [-45.0, 640], [-50.0, 640], [-46.0, 640], [-47.0, 640], [-49.0, 640], [-51.0, 640], [-49.0, 640], [-49.0, 640], [-48.0, 640], [-52.0, 640], [-50.0, 640], [-49.5, 640], [-51.0, 640], [-50.0, 640], [-47.0, 640], [-47.5, 640], [-50.0, 640], [-50.0, 640], [-50.0, 640], [-48.0, 640], [-48.0, 640], [-51.0, 640], [-53.0, 640], [-49.0, 640], [-48.5, 640], [-48.5, 640], [-47.5, 640], [-48.0, 640], [-49.5, 640], [-50.0, 640], [-48.0, 640], [-48.5, 640], [-51.5, 640], [-47.5, 640], [-46.5, 640], [-46.5, 640], [-47.5, 1270], [-47.5, 1270], [-54.0, 1270], [-48.0, 1270], [-46.5, 1270], [-55.0, 1270], [-50.0, 1270], [-53.5, 1270], [-50.0, 1270], [-46.0, 1270], [-43.5, 1270], [-58.0, 1270], [-47.0, 1270], [-51.0, 1270], [-48.5, 1270], [-49.5, 1270], [-58.5, 1270], [-55.5, 1270], [-48.0, 1270], [-45.5, 1270], [-50.5, 1270], [-53.5, 1270], [-55.5, 1270], [-47.5, 1270], [-44.5, 1270]]
 
leftRegressorX.fit([x[0] for x in leftEyeXs],[x[1] for x in leftEyeXs])
#leftRegressorY.fit([[y[0]] for y in leftEyeYs],[y[1] for y in leftEyeYs])
#regr_1.fit(X, y)
#regr_2.fit(X, y)

# Predict
#X_test = np.arange(0.0, 5.0, 0.01)[:, np.newaxis]
#y_1 = regr_1.predict(X_test)
#y_2 = regr_2.predict(X_test)

# Plot the results
#plt.figure()
#plt.scatter(X, y, c="k", label="data")
#plt.plot(X_test, y_1, c="g", label="max_depth=2", linewidth=2)
#plt.plot(X_test, y_2, c="r", label="max_depth=5", linewidth=2)
#plt.xlabel("data")
#plt.ylabel("target")
#plt.title("Decision Tree Regression")
#plt.legend()
#plt.show()
